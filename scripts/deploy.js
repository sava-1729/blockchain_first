var web3_lib = require('web3')
var tx_lib = require('ethereumjs-tx').Transaction
var web3 = new web3_lib('HTTP://127.0.0.1:7545')

// const ethEnabled = () => {
//   if (window.ethereum) {
//     window.web3 = new Web3(window.ethereum);
//     window.ethereum.enable();
//     return true;
//   }
//   return false;
// }
//
// if (!ethEnabled()) {
//   alert("Please install an Ethereum-compatible browser or extension like MetaMask to use this dApp!");
// }

const creator_public_key = '0x5e0eAE3b28BCB48E51f00e9FfA2459398762D1BC'
const creator_private_key = Buffer.from('5d7870ad9fe7873454ea21d7cda1ae7cbabb7b092bab25311450631d7689e428', 'hex')

web3.eth.getTransactionCount(creator_public_key, (err, txCount) => {
    const byte_code = '0x6080604052600067ffffffffffffffff8111801561001c57600080fd5b5060405190808252806020026020018201604052801561004b5781602001602082028036833780820191505090505b5060029080519060200190610061929190610261565b50600067ffffffffffffffff8111801561007a57600080fd5b506040519080825280602002602001820160405280156100a95781602001602082028036833780820191505090505b50600390805190602001906100bf9291906102eb565b503480156100cc57600080fd5b506005600181905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73560405160405180910390a360008090505b60015481101561025b5760026000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038190806001815401808255809150506001900390600052602060002001600090919091909150558080600101915050610197565b506103a0565b8280548282559060005260206000209081019282156102da579160200282015b828111156102d95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610281565b5b5090506102e79190610338565b5090565b828054828255906000526020600020908101928215610327579160200282015b8281111561032657825182559160200191906001019061030b565b5b509050610334919061037b565b5090565b61037891905b8082111561037457600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555060010161033e565b5090565b90565b61039d91905b80821115610399576000816000905550600101610381565b5090565b90565b610795806103af6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a5775a991161005b578063a5775a991461017d578063ca2aac52146101dc578063d79fa1511461023b578063efad19361461027d57610088565b80630ca018a31461008d57806335942eda146100d1578063893d20e814610115578063949d225d1461015f575b600080fd5b6100cf600480360360208110156100a357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102eb565b005b610113600480360360208110156100e757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610425565b005b61011d6105ed565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610167610616565b6040518082815260200191505060405180910390f35b61018561061c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101c85780820151818401526020810190506101ad565b505050509050019250505060405180910390f35b6101e46106aa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561022757808201518184015260208101905061020c565b505050509050019250505060405180910390f35b6102676004803603602081101561025157600080fd5b8101908080359060200190929190505050610702565b6040518082815260200191505060405180910390f35b6102a96004803603602081101561029357600080fd5b8101908080359060200190929190505050610723565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000600380549050141561034257600073ffffffffffffffffffffffffffffffffffffffff167f2560ff27b146ab24f00cbb6dc725b080a2cd8199898b428638d346cbe907f55460405160405180910390a2610422565b600060036001600380549050038154811061035957fe5b90600052602060002001549050816002828154811061037457fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060038054806103c757fe5b600190038181906000526020600020016000905590558173ffffffffffffffffffffffffffffffffffffffff167f2560ff27b146ab24f00cbb6dc725b080a2cd8199898b428638d346cbe907f55460405160405180910390a2505b50565b600080905060008090505b60015481101561059e578273ffffffffffffffffffffffffffffffffffffffff166002828154811061045e57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561059157600191508273ffffffffffffffffffffffffffffffffffffffff167f25eea1058d889fb97345d8be34d09e3c19b4f670e0886675e139afb602df331460405160405180910390a26000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002828154811061051b57fe5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600381908060018154018082558091505060019003906000526020600020016000909190919091505561059e565b8080600101915050610430565b50806105e957600073ffffffffffffffffffffffffffffffffffffffff167f25eea1058d889fb97345d8be34d09e3c19b4f670e0886675e139afb602df331460405160405180910390a25b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60015481565b606060028054806020026020016040519081016040528092919081815260200182805480156106a057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610656575b5050505050905090565b606060038054806020026020016040519081016040528092919081815260200182805480156106f857602002820191906000526020600020905b8154815260200190600101908083116106e4575b5050505050905090565b6003818154811061070f57fe5b906000526020600020016000915090505481565b6002818154811061073057fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea264697066735822122005fb900050a68e91d3d9aa1b1eb969d230fa2324ba7a14c85f7e3f98a31c090f64736f6c63430006060033'
    const gasPrice = 20000000000
    var txData = {
        nonce : web3.utils.toHex(txCount),
        gasLimit : web3.utils.toHex(1000000),
        gasPrice : web3.utils.toHex(gasPrice),
        data : byte_code
    }

    const txObj = new tx_lib(txData)
    txObj.sign(creator_private_key)

    const serialized = txObj.serialize().toString('hex')
    const raw = '0x' + serialized
    console.log('ABOUT TO SEND TRANSACTION')
    web3.eth.sendSignedTransaction(raw, (err, txHash) => {console.log('err:', err, 'txHash:', txHash)})
})

// var gasPrice = 0
// var cb = (err, val) => { gasPrice = val }
// web3.eth.getGasPrice(cb)
// console.log('gasPrice:', gasPrice)
